# 定义变量
info.app_name=My First Spring Boot Application
info.app_version=1.0.0

# 自定义内嵌servlet容器
#server.port - 进来的HTTP请求的监听端口号
#server.address - 绑定的接口地址
#server.sessionTimeout - session超时时间

# Placeholders in properties
app.name=MyApp
app.description=${app.name} is a Spring Boot application

# set cache to false otherwise change will NOT be visible even when html file is changed & copied to class dir
# ref: https://github.com/spring-projects/spring-boot/issues/34
spring.thymeleaf.cache: false

# to show Spring Boot how to find the views:
#spring.mvc.view.prefix: /WEB-INF/jsp/
#spring.mvc.view.suffix: .jsp

application.message: Hello Phil

logging.level.org: INFO



# Customizing endpoints
#management.port=8081 #- you can expose those endpoints on port other than the one application is using (8081 here).
#management.address=127.0.0.1 #- you can only allow to access by IP address (localhost here).
#management.context-path=/actuator #- allows you to have those endpoints grouped under specified context path rather than root, i.e. /actuator/health.
#endpoints.health.enabled=false #- allows to enable/disable specified endpoint by name, here /health is disabled.

# set random value
my.secret=${random.value}
my.number=${random.int}
my.bignumber=${random.long}
my.number.less.than.ten=${random.int(10)}
my.number.in.range=${random.int[1024,65536]}

# JPA: to create the schema automatically, based on our entity classes
# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.jpa.hibernate.ddl-auto=none 
spring.datasource.continueOnError=true
#create-drop

# Database connection
spring.datasource.url = jdbc:h2:~/test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username = sa
spring.datasource.password =
# example of MySQL connection
#spring.datasource.driver-class-name: com.mysql.jdbc.Driver
#spring.datasource.url: jdbc:mysql://localhost:3306/springbootcookbook
#spring.datasource.username: root
#spring.datasource.password:

# specify which profiles are active
spring.profiles.active=dev,hsqldb



